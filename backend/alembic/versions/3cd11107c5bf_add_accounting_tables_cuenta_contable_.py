"""add accounting tables - cuenta_contable, asiento_contable, detalle_asiento

Revision ID: 3cd11107c5bf
Revises: c03bcd18c789
Create Date: 2025-08-06 16:00:38.687663

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '3cd11107c5bf'
down_revision: Union[str, Sequence[str], None] = 'c03bcd18c789'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cuentas_contables',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('codigo', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('tipo_cuenta', sa.Enum('ACTIVO', 'PASIVO', 'PATRIMONIO', 'INGRESO', 'EGRESO', name='tipocuenta'), nullable=False),
    sa.Column('cuenta_padre_id', sa.Uuid(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cuenta_padre_id'], ['cuentas_contables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cuentas_contables_codigo'), 'cuentas_contables', ['codigo'], unique=True)
    op.create_table('asientos_contables',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('origen_tipo', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('origen_id', sa.Uuid(), nullable=True),
    sa.Column('total_debito', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('total_credito', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('is_balanced', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('detalles_asiento',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('asiento_id', sa.Uuid(), nullable=False),
    sa.Column('cuenta_id', sa.Uuid(), nullable=False),
    sa.Column('tipo_movimiento', sa.Enum('DEBITO', 'CREDITO', name='tipomovimiento'), nullable=False),
    sa.Column('monto', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['asiento_id'], ['asientos_contables.id'], ),
    sa.ForeignKeyConstraint(['cuenta_id'], ['cuentas_contables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint(op.f('movimientos_inventario_created_by_fkey'), 'movimientos_inventario', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(op.f('movimientos_inventario_created_by_fkey'), 'movimientos_inventario', 'users', ['created_by'], ['id'])
    op.drop_table('detalles_asiento')
    op.drop_table('asientos_contables')
    op.drop_index(op.f('ix_cuentas_contables_codigo'), table_name='cuentas_contables')
    op.drop_table('cuentas_contables')
    # ### end Alembic commands ###
