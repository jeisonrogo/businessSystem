"""add billing tables - clientes, facturas, detalles_factura

Revision ID: 08b45c8844c3
Revises: 60790d488b7a
Create Date: 2025-08-06 17:43:11.642657

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '08b45c8844c3'
down_revision: Union[str, Sequence[str], None] = '60790d488b7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clientes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tipo_cliente', sa.Enum('PERSONA_NATURAL', 'EMPRESA', name='tipocliente'), nullable=False),
    sa.Column('tipo_documento', sa.Enum('CEDULA', 'NIT', 'PASAPORTE', 'CEDULA_EXTRANJERIA', name='tipodocumento'), nullable=False),
    sa.Column('numero_documento', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('nombre_completo', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('ciudad', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('departamento', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('codigo_postal', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('nombre_comercial', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('regimen_tributario', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clientes_numero_documento'), 'clientes', ['numero_documento'], unique=True)
    op.create_table('facturas',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('numero_factura', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('prefijo', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('cliente_id', sa.Uuid(), nullable=False),
    sa.Column('fecha_emision', sa.DateTime(), nullable=False),
    sa.Column('fecha_vencimiento', sa.DateTime(), nullable=True),
    sa.Column('tipo_factura', sa.Enum('VENTA', 'DEVOLUCION', 'NOTA_CREDITO', 'NOTA_DEBITO', name='tipofactura'), nullable=False),
    sa.Column('estado', sa.Enum('BORRADOR', 'EMITIDA', 'PAGADA', 'ANULADA', 'VENCIDA', name='estadofactura'), nullable=False),
    sa.Column('subtotal', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('total_descuento', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('total_impuestos', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('total_factura', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('terminos_condiciones', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('metodo_pago', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('asiento_contable_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['asiento_contable_id'], ['asientos_contables.id'], ),
    sa.ForeignKeyConstraint(['cliente_id'], ['clientes.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_facturas_numero_factura'), 'facturas', ['numero_factura'], unique=True)
    op.create_table('detalles_factura',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('factura_id', sa.Uuid(), nullable=False),
    sa.Column('producto_id', sa.Uuid(), nullable=False),
    sa.Column('descripcion_producto', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('codigo_producto', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('precio_unitario', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('descuento_porcentaje', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('descuento_valor', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('porcentaje_iva', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('subtotal_item', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('valor_descuento', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('base_gravable', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('valor_iva', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('total_item', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['factura_id'], ['facturas.id'], ),
    sa.ForeignKeyConstraint(['producto_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('detalles_factura')
    op.drop_index(op.f('ix_facturas_numero_factura'), table_name='facturas')
    op.drop_table('facturas')
    op.drop_index(op.f('ix_clientes_numero_documento'), table_name='clientes')
    op.drop_table('clientes')
    # ### end Alembic commands ###
